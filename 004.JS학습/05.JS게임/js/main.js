// Racing PJ 메인 JS - main.js

// DOM 메서드 모듈
import myFn from "./my_function.js";

/********************************************** 
            [ 게임 기능정의 ]
    _________________________________

    1. 게임룰: 거북버튼 클릭하여 거북을
        왼쪽에서 오른쪽으로 이동함
        이때 토끼는 자동으로 이동하여
        결승선에 먼저 도달하는 레이서가 승리함
    2. 토끼의 이동속도는 레벨로 설정함
    3. 결승선 도착은 둘 중 하나가 먼저
        도착할 경우 판별함수에서 결과를
        화면에 출력한다.
    4. 포커스가 버튼에 갈 경우 마우스가
        아닌 키보드 버튼으로 조작할 수 없게함
        (마우스만 사용하도록 함!)
    5. 기본적으로 거북이동버튼 클릭시
        토끼는 자동으롤 작동됨!
    6. 토끼이동버튼은 토끼만 미리 작동가능
    7. 처음으로 버튼은 전체를 리셋함
    
**********************************************/

// 1. 대상선정 ///////////////////
// (1) 거북 : #t1
const t1 = myFn.qs("#t1");

// (2) 토끼 : #r1
const r1 = myFn.qs("#r1");

// (3) 버튼 : #btns a
const btns = myFn.qsa("#btns a");

// (4) 레벨 : #level
const level = myFn.qs("#level");

// (5) 메시지박스 : #msg
const msg = myFn.qs("#msg");

// (6) 토끼, 거북 위치값 변수
let r1pos = 0,
  t1pos = 0;
// 토끼위치 : r1pos / 거북위치 : t1pos

// (7) 거북이동값 상수
const T1_NUM = 16;

// (8) 결승선 위치 상수
const FINAL_NUM = 650;

// (9) 거북작동멈춤 상태변수
let t1Stop = false;

// console.log('대상:',t1,r1,btns,level,msg);

// 2. 이벤트 설정하기 ////////////

// 3. 함수 만들기 ///////////////////
/*********************************** 
    함수명: goGame
    기능: 버튼별 기능분기
***********************************/
function goGame() {
  console.log("고고씽~!");
} /////////// goGame 함수 ////////////

/*********************************** 
 함수명: goR1
 기능: 토끼자동이동(인터발함수)
 ***********************************/
// 인터발지우기용 변수
let autoI;
function goR1(){
    console.log('토끼자동이동!');
} ///////// goR1함수 //////////////////

/***************************************** 
    함수명: whoWinner
    기능: 기준값 보다 레이서위치값이 큰경우
        승자를 판별하여 메시지를 보여준다!
*****************************************/
function whoWinner(){
    console.log('승자판별!');
} ///////// whoWinner 함수 ////////////////

/**************************************** 
    [ 내가 원하는 랜덤수 만들기 ]
    1. Math.random() 
    -> 0~1사이 소수점 16자리 랜덤수 생성됨

    2. 내가원하는 1~몇까지의 랜덤수 만들기
    (1) Math.random() * 원하는 최대수
    -> 0~원하는수보다 1작은수까지 랜덤수발생~
    (2) 올림처리하여 1~원하는수 를 만들어준다!
    -> Math.ceil(Math.random() * 원하는 최대수)
    -> 만약 0부터 1작은 최대수를 만들고싶으면
    내림처리하면된다! Math.floor()
    (3) 중간범위의 랜덤수를 만들고자 할때는
    1부터 최대수를 구하고 특정 시작수를 더해주면된다!
    예) 4~12 랜덤수는 
    Math.ceil(Math.random() * 8)+3
****************************************/

// console.log('Math.random():',
// Math.random());
// console.log('Math.random()*8:',
// Math.random()*8);
// console.log('Math.ceil(Math.random()*8):',
// Math.ceil(Math.random()*8));
// console.log('4~12 랜덤수:',
// Math.ceil(Math.ceil(Math.random() * 8)+3));
