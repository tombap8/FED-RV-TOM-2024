// 회원가입 유효성검사 및 회원가입처리 JS - valid_member.js

export default function valid_member() {
  console.log("유효성검사! 나야나~!!!", $("#mid"));

  /********************************************** 
    [ 사용자 입력폼 유효성 검사 ]
    - 이벤트 종류 : blur(포커스가 빠질때 발생)
    - 제이쿼리 이벤트 메서드 :  blur()
    - 이벤트 대상: 
    ->입력요소 중 text(아이디email2제외),password
        form.logF input[type=text][id!=email2],
        form.logF input[type=password],
    -> 요소뒤 대괄호는 속성선택자(CSS원래문법)
    [id!=email2] !=은 같지않다(제이쿼리용문법)

**********************************************/
  $(`form.logF input[type=text][id!=email2],
    form.logF input[type=password]`)
    // .on('blur',function(){})
    .blur(function () {
    /****************************************** 
        1. 현재 블러가 발생한 요소의 아이디는?
    ******************************************/
      let cid = $(this).attr("id");
      // cid 는 current id 즉, 현재 아이디

      // [ 모든 공백 제거함수 (get rid of Space) ]
      const groSpace = (x) => x.replace(/\s/g, "");
      // replace(정규식,바꿀문자)
      // 정규식은 슬래쉬 사이에 표현 : \s 공백문자
      // g는 global 즉, 전역적으로 찾으라는 플래그 문자

    /****************************************** 
        2. 현재 블러가 발생한 요소의 값은?
    ******************************************/
      // 이름입력창(id=='mnm')이면 trim() 나머지는 groSpace()
      // 로 처리하여 공백을 제거한다!
    //   let cv = 
    //   cid == "mnm" ? 
    //   $(this).val().trim() : 
    //   groSpace($(this).val());
      // 비?집:놀이동산

      // 입력창 공백처리후 재입력하기!
      $(this).val(cv);

      // console.log("id는?", cid, "/값은?", cv);

    /************************************* 
        3. 빈값 여부 검사하기 (필수입력항목)
    *************************************/
      if (cv == "") {
        //메시지 출력하기
        $(this).siblings(".msg").text("필수입력!").removeClass("on");

        // [ 불통과시 pass값 변경1 ]
        pass = false;
      } //////// if //////

    /**************************************** 
        4. 아이디일 경우 유효성 검사
        - 검사기준: 
        영문자로 시작하는 6~20글자 영문자/숫자
    ****************************************/
      else if (cid == "mid") {
      } /////////////// else if : 아이디검사 ///////

    /**************************************** 
        5. 비밀번호일 경우 유효성 검사
        - 검사기준: 
        특수문자,문자,숫자포함 형태의 5~15자리
    ****************************************/
      else if (cid == "mpw") {
      } /////////////// else if : 비밀번호검사 ///////

    /**************************************** 
        6. 비밀번호확인일 경우 유효성 검사
        - 검사기준: 비빌번호 항목과 일치여부
    ****************************************/
      else if (cid == "mpw2") {
      } ///////////// else if : 비밀번호확인검사 ///////

    /**************************************** 
        7. 이메일 유효성 검사
        - 검사기준: 이메일 형식에 맞는지 여부
    ****************************************/
      else if (cid == "email1") {
      } /////////////// else if : 비밀번호검사 ///////

    /// 모두 통과일 경우 메시지 지우기 ///////
      else {
      } /////// else //////
    }); ///////////////// blur 메서드 /////////////////
} ///////////// valid_member 함수 //////////////
